type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df$sample_id[.],
"<br>Sample Time:", df$file_time[.],
"<br>Sample Value:", as.formula(paste0("~", var)))),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
i = i + 1
}
fig <- subplot(list_fig)
fig
list_fig = list()
for (var in variable){
i= 0
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df$sample_id[.],
"<br>Sample Time:", df$file_time[.],
"<br>Sample Value:", paste0("~", var)[.])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
i = i + 1
}
fig <- subplot(list_fig)
fig
list_fig = list()
for (var in variable){
i= 0
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df$sample_id[.],
"<br>Sample Time:", df$file_time[.],
"<br>Sample Value:", df[,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
i = i + 1
}
fig <- subplot(list_fig)
fig
list_fig = list()
for (var in variable){
i= 0
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df$sample_id[.],
"<br>Sample Time:", df$file_time[.],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
i = i + 1
}
fig <- subplot(list_fig)
fig
list_fig = list()
for (var in variable){
i= 0
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
i = i + 1
}
fig <- subplot(list_fig)
fig
View(values)
View(values)
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
####################################################
fig
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~df[.,'Time diff'],
y = ~df[.,var],
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~df[.,'timediff'],
y = ~df[.,var],
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~df['timediff'],
y = ~df[var],
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
fig
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
####################################################
fig
#variable <- values[,'Parametr']
values = values[values['series'] == '90360920',]
values = values[values['vessel'] == 'kolba2000ml',]
seria <- as.list(as.set(values[,'series']))
View(seria)
View(seria)
vesel <- as.list(as.set(values[,'vessel']))
seria <- as.list((values[,'series']))
vesel <- as.list((values[,'vessel']))
View(seria)
seria <- as.list(set(values[,'series']))
seria <- as.list(values[,'series'][!duplicated((values[,'series'])])
seria <- as.list(unique(values[,'series']))
View(seria)
#variable <- values[,'Parametr']
seria <- as.list(unique(values[,'series']))
vesel <- as.list(unique(values[,'vessel']))
variable <- list('total_cells', 'total_cells_per_ml')
####################################################
values <- read.csv("Cultivation curve.csv")
list_fig = list()
for (var in variable){
fig1 <- plot_ly()
print(var)
for (ser in seria) {
print(ser)
for (ves in vesel){
print(ves)
df = values[values['series'] == ser,]
df = df[df['vessel'] == ves,]
fig1 <- add_trace(fig1,
data = df,
x = ~timediff,
y = as.formula(paste0("~", var)),
type = 'scatter',
mode = 'lines+markers',
hovertemplate =map(1:nrow(df), ~paste(
"Sample Name: ", df[.,'sample_id'],
"<br>Sample Time:", df[.,'file_time'],
"<br>Sample Value:", df[.,var])),
name = df$seriavessel[1])
}
}
list_fig <- append(list_fig,list(fig1))
}
fig <- subplot(list_fig)
####################################################
fig
install.packages("htmlwidgets")
############### Library Declarations ###############
libraryRequireInstall("magrittr");
libraryRequireInstall("ggplot2");
libraryRequireInstall("plotly");
libraryRequireInstall("purrr");
ser <- Values$series
internalSaveWidget(p, 'out.html');
install.packages("XML", repos = "http://www.omegahat.org/R")
####################################################
url<-"http://www.registeruz.sk/cruz-public/domain/accountingentity/show/1545622"
b <- htmlTreeParse(url)
install.packages('XML')
############### Library Declarations ###############
library(XML);
b <- htmlTreeParse(url)
####################################################
values <- read.csv("Cultivation curve.csv")
################### Actual code ####################
df <- values
################### Actual code ####################
df <- values
temp_df <- setdiff(df, df[['file_time','sample_id','seriavessel',
'series','vessel','timediff']])
variable <- as.list(names(temp_df))
temp_df <- setdiff(df, df[['file_time','sample_id','seriavessel',
'series','vessel','timediff'],])
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel',
'series','vessel','timediff'])
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel','series','vessel','timediff'])
View(values)
View(values)
temp_df <- setdiff(df, df['file_time','sample_id'])#,'seriavessel','series','vessel','timediff'])
variable <- as.list(names(temp_df))
View(variable)
################### Actual code ####################
df <- values
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel'])
temp_df <- setdiff(temp_df, temp_df['series','vessel','timediff'])
################### Actual code ####################
df <- values
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel'])
temp_df <- setdiff(temp_df, temp_df['series','vessel','timediff'])
variable <- as.list(names(temp_df))
################### Actual code ####################
df <- values
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel'])
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel',])
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel'],)
temp_df <- setdiff(temp_df, temp_df['series','vessel','timediff'],)
temp_df <- setdiff(df, df[['file_time','sample_id','seriavessel']])
temp_df <- setdiff(df, df['file_time','sample_id','seriavessel'])
temp_df <- setdiff(names(df),list('file_time','sample_id','seriavessel','series','vessel','timediff'))
temp_df <- as.list(setdiff(names(df),list('file_time','sample_id','seriavessel','series','vessel','timediff')))
View(temp_df)
View(temp_df)
str("222")
c("222")
####################################################
Values <- read.csv("Cultivation curve.csv")
################### Actual code ####################
Values <- as.data.frame(Values)
ser <- Values$series
ves <- Values$vessel
seria <- as.list(unique(ser))
vesel <- as.list(unique(ves))
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
variable <- as.list(setdiff(names(temp_df),list('file_time','sample_id','seriavessel',
'series','vessel','timediff')))
df <- data.frame(matrix(ncol = length(names(temp_df)) + 1, nrow = 0))
for (ser in seria){
temp_ <- temp_df %>% filter(series %in% ser)
start_time = min(temp_$file_time)
colnames(temp_) <- c("one_timediff")
temp_['one_timediff'] <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
colnames(temp_df) <- c("one_timediff")
colnames(temp_df) <- names(temp_df) + c("one_timediff")
temp_df$one_timediff <- 0
View(temp_df)
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
View(temp_df)
temp_df$one_timediff <- 0
View(temp_df)
####################################################
Values <- read.csv("Cultivation curve.csv")
################### Actual code ####################
Values <- as.data.frame(Values)
ser <- Values$series
ves <- Values$vessel
seria <- as.list(unique(ser))
vesel <- as.list(unique(ves))
cbind(temp_df, 'one_timediff')
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
cbind(temp_df, 'one_timediff')
cbind(temp_df, one_timediff)
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
cbind(temp_df, "one_timediff")
temp_df <- cbind(temp_df, "one_timediff")
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
temp_df <- cbind(temp_df, "one_timediff")
View(temp_df)
View(temp_df)
View(seria)
View(vesel)
####################################################
Values <- read.csv("Cultivation curve.csv")
################### Actual code ####################
Values <- as.data.frame(Values)
ser <- Values$series
ves <- Values$vessel
seria <- as.list(unique(ser))
vesel <- as.list(unique(ves))
temp_df <- Values[, colSums(is.na(Values)) != nrow(Values)]
variable <- as.list(setdiff(names(temp_df),list('file_time','sample_id','seriavessel',
'series','vessel','timediff')))
df <- data.frame(matrix(ncol = length(names(temp_df)) + 1, nrow = 0))
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser]
start_time = min(temp_$file_time)
temp_ <- cbind(temp_, "one_timediff")
temp_['one_timediff'] <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser,]
start_time = min(temp_$file_time)
temp_ <- cbind(temp_, "one_timediff")
temp_['one_timediff'] <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
View(temp_)
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser,]
start_time = min(temp_$file_time)
temp_ <- cbind(temp_, one_timediff)
temp_['one_timediff'] <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
View(temp_)
temp_ <- cbind(temp_, 'one_timediff')
temp_['one_timediff'] <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
View(temp_)
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser,]
start_time = min(temp_$file_time)
temp_ <- cbind(temp_, one_timediff)
temp_$one_timediff <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
View(temp_)
temp_ <- cbind(temp_, c(one_timediff))
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser,]
start_time = min(temp_$file_time)
temp_ <- cbind(temp_, c(one_timediff))
temp_$one_timediff <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
for (ser in seria){
#temp_ <- temp_df %>% filter(series %in% ser)
temp_ <- temp_df[temp_df['series'] == ser,]
start_time = min(temp_$file_time)
one_timediff <- difftime(time1 = temp_$file_time,
time2 = start_time,
units = "hour")
temp_ <- cbind(temp_, one_timediff)
colnames(df) <- names(temp_)
df <- rbind(df, temp_)
}
View(temp_)
